include Rake::DSL
require "pp"

# -----------------------------------------------------------------------------
# Support functions

# Get a list of uniq directories from the list of files
def get_dirs list
	ret = []
	list.each {|file| ret << File.dirname(File.expand_path(file))} 
	ret.uniq
end

# Assert if function is false
def assert
	if not yield
		exit(10)
	end
end

# Run a script and yield to any given block with the output
def run_script text
	out = ""
	ret = IO.popen('sh', 'r+') do |f|
		f.puts(text)
		f.close_write
		out = f.read
	end

	reg = /^pid (\d+) exit (\d+)$/.match($?.to_s)
	assert {reg.size == 3}

	yield out, reg[2].to_i if block_given?
	$?
end

def run_script_error text
	run_script text do |output, error|
		if error != 0
			puts "!ERROR"
			puts output
			false
		end
	end
	true
end



# -----------------------------------------------------------------------------
# Rakefile to make game
SCRIPT_NAME = "Omnifocus Inbox"
TEST_FILE = "test.jpg"


# -----------------------------------------------------------------------------
SCRIPT_DIR = "~/Library/Application Support/Dropzone/Destination Scripts"

full_script_dir = File.expand_path SCRIPT_DIR
script_test_dir = "#{full_script_dir}/lib"
full_test_file = File.expand_path TEST_FILE

script_dest = "#{full_script_dir}/#{SCRIPT_NAME}.dropzone"
script_src = "#{SCRIPT_NAME}.dropzone"
dest_files = [script_dest]
all_dst_dirs = get_dirs dest_files

# -----------------------------------------------------------------------------
task :default => [:dirs]

task :dirs => all_dst_dirs.each {|d| directory(d); Rake::Task[d]} do
	puts "Made directories"
end


task :test  do
	puts "\n\n\n\n\n*** TESTING ***\n"

	# ruby syntax check
	run_script_error "ruby -c \"#{script_src}\""

	# cp file to destination dir
	run_script_error"cp \"#{script_src}\" \"#{script_dest}\""

	test_file_full_path = File.expand_path TEST_FILE

	# change directory to test dir
	start_dir = Dir.pwd
	Dir.chdir script_test_dir

	# Run the tests
	puts "Clicked Test"
	run_script "./runner.rb \"#{script_src}\" clicked" do |output, err_no|
		puts output unless err_no == 0
		assert { err_no == 0 }
	end

	puts ""

	puts "Dragged Test"
	run_script "./runner.rb \"#{script_src}\" dragged #{full_test_file}"  do |output, err_no|
		puts output unless err_no == 0
		assert { err_no == 0 }
	end

end


# -----------------------------------------------------------------------------
# end

